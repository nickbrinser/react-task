{"ast":null,"code":"function _extends() {\n  return _extends = Object.assign || function (a) {\n    for (var b, c = 1; c < arguments.length; c++) for (var d in b = arguments[c], b) Object.prototype.hasOwnProperty.call(b, d) && (a[d] = b[d]);\n\n    return a;\n  }, _extends.apply(this, arguments);\n}\n\nimport { textColor } from \"./color\";\n\nvar getSvgFont = function (a) {\n  var b = a.fontFamily,\n      c = a.fontSize,\n      d = a.letterSpacing;\n  return {\n    fill: textColor,\n    stroke: \"none\",\n    fontFamily: b,\n    fontSize: c,\n    letterSpacing: d\n  };\n},\n    fontFamily = \"BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif\";\n\nexport default {\n  fontFamily: fontFamily,\n  // weights\n  light: {\n    fontWeight: 200\n  },\n  bold: {\n    fontWeight: 700\n  },\n  // alignment\n  start: {\n    textAnchor: \"start\"\n  },\n  middle: {\n    textAnchor: \"middle\"\n  },\n  end: {\n    textAnchor: \"end\"\n  },\n  // size\n  tiny: _extends({}, getSvgFont({\n    fontFamily: fontFamily,\n    fontSize: 10,\n    letterSpacing: .4\n  })),\n  small: _extends({}, getSvgFont({\n    fontFamily: fontFamily,\n    fontSize: 12,\n    letterSpacing: .4\n  })),\n  regular: _extends({}, getSvgFont({\n    fontFamily: fontFamily,\n    fontSize: 14,\n    letterSpacing: .2\n  })),\n  large: _extends({}, getSvgFont({\n    fontFamily: fontFamily,\n    fontSize: 18,\n    spacing: 0\n  }))\n};","map":null,"metadata":{},"sourceType":"module"}