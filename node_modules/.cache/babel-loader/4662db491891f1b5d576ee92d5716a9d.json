{"ast":null,"code":"import _objectWithoutProperties from \"/Users/nicholas/Desktop/working/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/nicholas/Desktop/working/src/components/barChart/HistChart.jsx\";\nimport React from 'react';\nimport { Histogram, BarSeries, XAxis, YAxis, withParentSize } from '@data-ui/histogram';\nimport { chartTheme } from '@data-ui/theme';\nconst ResponsiveHistogram = withParentSize((_ref) => {\n  let parentWidth = _ref.parentWidth,\n      rest = _objectWithoutProperties(_ref, [\"parentWidth\"]);\n\n  return React.createElement(Histogram, Object.assign({\n    width: parentWidth,\n    height: parentWidth * 0.5\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n});\n\nconst HistChart = props => {\n  const maxYValue = Math.max(...props.data.map(d => d.count));\n  return React.createElement(ResponsiveHistogram, {\n    theme: chartTheme,\n    ariaLabel: \"Histogram\",\n    orientation: \"vertical\",\n    valueAccessor: datum => datum,\n    binType: \"numeric\",\n    binCount: 22,\n    renderTooltip: ({\n      event,\n      datum,\n      data,\n      color\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        color: chartTheme.colors.categories[3]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, datum.bin0, \" to \", datum.bin1), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"count: \"), datum.count)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(BarSeries, {\n    stroke: chartTheme.colors.categories[3],\n    fillOpacity: 0.15,\n    fill: \"rgb(202, 230, 151)\",\n    rawData: props.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    color: \"rgb(202, 230, 151)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    label: \"Count\",\n    yDomain: [0, maxYValue],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nexport default HistChart;","map":{"version":3,"sources":["/Users/nicholas/Desktop/working/src/components/barChart/HistChart.jsx"],"names":["React","Histogram","BarSeries","XAxis","YAxis","withParentSize","chartTheme","ResponsiveHistogram","parentWidth","rest","HistChart","props","maxYValue","Math","max","data","map","d","count","datum","event","color","colors","categories","bin0","bin1"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,cALF,QAMO,oBANP;AAOA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,MAAMC,mBAAmB,GAAGF,cAAc,CACxC;AAAA,MAAGG,WAAH,QAAGA,WAAH;AAAA,MAAmBC,IAAnB;;AAAA,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAED,WADT;AAEE,IAAA,MAAM,EAAEA,WAAW,GAAG;AAFxB,KAGMC,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAAA,CADwC,CAA1C;;AAYA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGH,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,KAAtB,CAAZ,CAAlB;AAEA,SACE,oBAAC,mBAAD;AACE,IAAA,KAAK,EAAEZ,UADT;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,aAAa,EAAEa,KAAK,IAAIA,KAJ1B;AAKE,IAAA,OAAO,EAAC,SALV;AAME,IAAA,QAAQ,EAAE,EANZ;AAOE,IAAA,aAAa,EAAE,CAAC;AAAEC,MAAAA,KAAF;AAASD,MAAAA,KAAT;AAAgBJ,MAAAA,IAAhB;AAAsBM,MAAAA;AAAtB,KAAD,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAEf,UAAU,CAACgB,MAAX,CAAkBC,UAAlB,CAA6B,CAA7B;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACK,IADT,UACmBL,KAAK,CAACM,IADzB,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGN,KAAK,CAACD,KAFT,CAJF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAEZ,UAAU,CAACgB,MAAX,CAAkBC,UAAlB,CAA6B,CAA7B,CADV;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,IAAI,EAAC,oBAHP;AAIE,IAAA,OAAO,EAAEZ,KAAK,CAACI,IAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAyBE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA0BE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAE,CAAC,CAAD,EAAIH,SAAJ,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA8BD,CAjCD;;AAmCA,eAAeF,SAAf","sourcesContent":["import React from 'react'\nimport {\n  Histogram,\n  BarSeries,\n  XAxis,\n  YAxis,\n  withParentSize\n} from '@data-ui/histogram'\nimport { chartTheme } from '@data-ui/theme'\n\nconst ResponsiveHistogram = withParentSize(\n  ({ parentWidth, ...rest }) => (\n    <Histogram\n      width={parentWidth}\n      height={parentWidth * 0.5}\n      {...rest}\n    />\n\n  )\n\n)\n\nconst HistChart = (props) => {\n  const maxYValue = Math.max(...props.data.map(d => d.count))\n\n  return (\n    <ResponsiveHistogram\n      theme={chartTheme}\n      ariaLabel='Histogram'\n      orientation='vertical'\n      valueAccessor={datum => datum}\n      binType='numeric'\n      binCount={22}\n      renderTooltip={({ event, datum, data, color }) => (\n        <div>\n          <strong style={{ color: chartTheme.colors.categories[3] }}>\n            {datum.bin0} to {datum.bin1}\n          </strong>\n          <div>\n            <strong>count: </strong>\n            {datum.count}\n          </div>\n        </div>\n      )}\n    >\n      <BarSeries\n        stroke={chartTheme.colors.categories[3]}\n        fillOpacity={0.15}\n        fill='rgb(202, 230, 151)'\n        rawData={props.data}\n      />\n      <XAxis color='rgb(202, 230, 151)' />\n      <YAxis label='Count' yDomain={[0, maxYValue]} />\n    </ResponsiveHistogram>\n  )\n}\n\nexport default HistChart\n"]},"metadata":{},"sourceType":"module"}