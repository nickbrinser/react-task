{"ast":null,"code":"import _toConsumableArray from\"/Users/nicholas/Desktop/working/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/nicholas/Desktop/working/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/nicholas/Desktop/working/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useEffect}from'react';import socketIOClient from'socket.io-client';import LineChart from'./components/lineChart/LineChart';import HistChart from'./components/barChart/HistChart';import{InputAlert}from'./components/inputAlert/InputAlert';import{Message}from'semantic-ui-react';import{ReactComponent as Loading}from\"@svgr/webpack?-svgo,+titleProp,+ref!./assets/graph-visual.svg\";import'./App.css';var socket=socketIOClient('http://127.0.0.1:3000');function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),alertField=_useState4[0],setAlert=_useState4[1];var _useState5=useState({labels:[],datasets:[{label:'Line Chart',backgrounColor:'rgba(0,0,0,0)',borderColor:'#ffffff',pointBackgrounColor:'rgb(202, 230, 151)',pointBorderColor:'rgb(202, 230, 151)',borderWidth:'2',lineTension:0.45,data:[]}]}),_useState6=_slicedToArray(_useState5,2),lineChartData=_useState6[0],setLine=_useState6[1];var _useState7=useState({data:[]}),_useState8=_slicedToArray(_useState7,2),barChartData=_useState8[0],setBar=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),currentValue=_useState10[0],setCurrent=_useState10[1];useEffect(function(){socket.on('data',function(res){var y=new Date(res.timestamp).toLocaleTimeString();var x=res.value;setLine(function(prevState){return _objectSpread({},prevState,{labels:[].concat(_toConsumableArray(prevState.labels),[y]),datasets:[_objectSpread({},prevState.datasets[0],{data:[].concat(_toConsumableArray(prevState.datasets[0].data),[x])})]});});setBar(function(prevState){return _objectSpread({},prevState,{data:[].concat(_toConsumableArray(prevState.data),[x])});});setCurrent(res.value);setResponse(true);});socket.on('disconnect',function(){socket.disconnect();setResponse(false);console.log('disconnected from server');});},[]);var handleChange=function handleChange(e){setAlert({alertField:e.target.value});};return React.createElement(\"div\",{style:{textAlign:'center'}},response?React.createElement(\"div\",null,React.createElement(\"div\",{className:\"card-list\"},React.createElement(\"div\",{className:\"card-container\"},React.createElement(LineChart,{data:lineChartData})),React.createElement(\"div\",{className:\"card-container\"},React.createElement(HistChart,{data:barChartData.data}))),React.createElement(InputAlert,{placeholder:\"Alert Threshold\",handleChange:handleChange}),currentValue>parseInt(alertField.alertField)&&alertField!==''?React.createElement(\"div\",{className:\"alert-message\"},React.createElement(Message,{color:\"red\",size:\"huge\"},' ',\"Threshold Exceeded \",alertField.alertfield,\"!\")):null):React.createElement(Loading,{className:\"graph-visual\"}));}export default App;","map":{"version":3,"sources":["/Users/nicholas/Desktop/working/src/App.js"],"names":["React","useState","useEffect","socketIOClient","LineChart","HistChart","InputAlert","Message","socket","App","response","setResponse","alertField","setAlert","labels","datasets","label","backgrounColor","borderColor","pointBackgrounColor","pointBorderColor","borderWidth","lineTension","data","lineChartData","setLine","barChartData","setBar","currentValue","setCurrent","on","res","y","Date","timestamp","toLocaleTimeString","x","value","prevState","disconnect","console","log","handleChange","e","target","textAlign","parseInt","alertfield"],"mappings":"4mCAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iCAAtB,CACA,OAASC,UAAT,KAA2B,oCAA3B,CACA,OAASC,OAAT,KAAwB,mBAAxB,C,qGAGA,MAAO,WAAP,CAEA,GAAMC,CAAAA,MAAM,CAAGL,cAAc,CAAC,uBAAD,CAA7B,CAEA,QAASM,CAAAA,GAAT,EAAgB,eACkBR,QAAQ,CAAC,KAAD,CAD1B,wCACPS,QADO,eACGC,WADH,8BAEiBV,QAAQ,CAAC,EAAD,CAFzB,yCAEPW,UAFO,eAEKC,QAFL,8BAGmBZ,QAAQ,CAAC,CACxCa,MAAM,CAAE,EADgC,CAExCC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,YADT,CAEEC,cAAc,CAAE,eAFlB,CAGEC,WAAW,CAAE,SAHf,CAIEC,mBAAmB,CAAE,oBAJvB,CAKEC,gBAAgB,CAAE,oBALpB,CAMEC,WAAW,CAAE,GANf,CAOEC,WAAW,CAAE,IAPf,CAQEC,IAAI,CAAE,EARR,CADQ,CAF8B,CAAD,CAH3B,yCAGPC,aAHO,eAGQC,OAHR,8BAkBiBxB,QAAQ,CAAC,CACtCsB,IAAI,CAAE,EADgC,CAAD,CAlBzB,yCAkBPG,YAlBO,eAkBOC,MAlBP,8BAqBqB1B,QAAQ,EArB7B,0CAqBP2B,YArBO,gBAqBOC,UArBP,gBAuBd3B,SAAS,CAAC,UAAM,CACdM,MAAM,CAACsB,EAAP,CAAU,MAAV,CAAkB,SAAAC,GAAG,CAAI,CACvB,GAAMC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,CAASF,GAAG,CAACG,SAAb,EAAwBC,kBAAxB,EAAV,CACA,GAAMC,CAAAA,CAAC,CAAGL,GAAG,CAACM,KAAd,CACAZ,OAAO,CAAC,SAACa,SAAD,0BACHA,SADG,EAENxB,MAAM,8BAAMwB,SAAS,CAACxB,MAAhB,GAAwBkB,CAAxB,EAFA,CAGNjB,QAAQ,CAAE,kBAAMuB,SAAS,CAACvB,QAAV,CAAmB,CAAnB,CAAN,EAA6BQ,IAAI,8BAAMe,SAAS,CAACvB,QAAV,CAAmB,CAAnB,EAAsBQ,IAA5B,GAAkCa,CAAlC,EAAjC,GAHJ,IAAD,CAAP,CAMAT,MAAM,CAAC,SAACW,SAAD,0BACFA,SADE,EAELf,IAAI,8BAAMe,SAAS,CAACf,IAAhB,GAAsBa,CAAtB,EAFC,IAAD,CAAN,CAIAP,UAAU,CAACE,GAAG,CAACM,KAAL,CAAV,CACA1B,WAAW,CAAC,IAAD,CAAX,CACD,CAfD,EAgBAH,MAAM,CAACsB,EAAP,CAAU,YAAV,CAAwB,UAAM,CAC5BtB,MAAM,CAAC+B,UAAP,GACA5B,WAAW,CAAC,KAAD,CAAX,CACA6B,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACD,CAJD,EAKD,CAtBQ,CAsBN,EAtBM,CAAT,CAuBA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1B9B,QAAQ,CAAC,CACPD,UAAU,CAAE+B,CAAC,CAACC,MAAF,CAASP,KADd,CAAD,CAAR,CAGD,CAJD,CAKA,MAEE,4BAAK,KAAK,CAAE,CAAEQ,SAAS,CAAE,QAAb,CAAZ,EACGnC,QAAQ,CACP,+BACE,2BAAK,SAAS,CAAC,WAAf,EACE,2BAAK,SAAS,CAAC,gBAAf,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,aADR,EADF,CADF,CAME,2BAAK,SAAS,CAAC,gBAAf,EACE,oBAAC,SAAD,EACE,IAAI,CAAEE,YAAY,CAACH,IADrB,EADF,CANF,CADF,CAaE,oBAAC,UAAD,EACE,WAAW,CAAC,iBADd,CAEE,YAAY,CAAEmB,YAFhB,EAbF,CAiBGd,YAAY,CAAGkB,QAAQ,CAAClC,UAAU,CAACA,UAAZ,CAAvB,EAAkDA,UAAU,GAAK,EAAjE,CACC,2BAAK,SAAS,CAAC,eAAf,EACE,oBAAC,OAAD,EAAS,KAAK,CAAC,KAAf,CAAqB,IAAI,CAAC,MAA1B,EACG,GADH,uBAEsBA,UAAU,CAACmC,UAFjC,KADF,CADD,CAOG,IAxBN,CADO,CA4BP,oBAAC,OAAD,EAAS,SAAS,CAAC,cAAnB,EA7BJ,CAFF,CAmCD,CAED,cAAetC,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport socketIOClient from 'socket.io-client'\nimport LineChart from './components/lineChart/LineChart'\nimport HistChart from './components/barChart/HistChart'\nimport { InputAlert } from './components/inputAlert/InputAlert'\nimport { Message } from 'semantic-ui-react'\nimport { ReactComponent as Loading } from './assets/graph-visual.svg'\n\nimport './App.css'\n\nconst socket = socketIOClient('http://127.0.0.1:3000')\n\nfunction App () {\n  const [response, setResponse] = useState(false)\n  const [alertField, setAlert] = useState('')\n  const [lineChartData, setLine] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: 'Line Chart',\n        backgrounColor: 'rgba(0,0,0,0)',\n        borderColor: '#ffffff',\n        pointBackgrounColor: 'rgb(202, 230, 151)',\n        pointBorderColor: 'rgb(202, 230, 151)',\n        borderWidth: '2',\n        lineTension: 0.45,\n        data: []\n      }\n    ]\n  })\n  const [barChartData, setBar] = useState({\n    data: []\n  })\n  const [currentValue, setCurrent] = useState()\n\n  useEffect(() => {\n    socket.on('data', res => {\n      const y = new Date(res.timestamp).toLocaleTimeString()\n      const x = res.value\n      setLine((prevState) => ({\n        ...prevState,\n        labels: [...prevState.labels, y],\n        datasets: [{ ...prevState.datasets[0], data: [...prevState.datasets[0].data, x] }]\n      }))\n\n      setBar((prevState) => ({\n        ...prevState,\n        data: [...prevState.data, x]\n      }))\n      setCurrent(res.value)\n      setResponse(true)\n    })\n    socket.on('disconnect', () => {\n      socket.disconnect()\n      setResponse(false)\n      console.log('disconnected from server')\n    })\n  }, [])\n  const handleChange = (e) => {\n    setAlert({\n      alertField: e.target.value\n    })\n  }\n  return (\n\n    <div style={{ textAlign: 'center' }}>\n      {response ? (\n        <div>\n          <div className='card-list'>\n            <div className='card-container'>\n              <LineChart\n                data={lineChartData}\n              />\n            </div>\n            <div className='card-container'>\n              <HistChart\n                data={barChartData.data}\n              />\n            </div>\n          </div>\n          <InputAlert\n            placeholder='Alert Threshold'\n            handleChange={handleChange}\n          />\n          {currentValue > parseInt(alertField.alertField) && alertField !== '' ? (\n            <div className='alert-message'>\n              <Message color='red' size='huge'>\n                {' '}\n                Threshold Exceeded {alertField.alertfield}!\n              </Message>\n            </div>\n          ) : null}\n        </div>\n      ) : (\n        <Loading className='graph-visual' />\n      )}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}