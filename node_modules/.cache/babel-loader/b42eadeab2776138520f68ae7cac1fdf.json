{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/* eslint react/forbid-prop-types: 0 */\n\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bounds = require('@vx/bounds');\n\nvar _Tooltip = require('./Tooltip');\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar propTypes = _extends({}, _bounds.withBoundingRectsProps, _Tooltip2.default.propTypes, {\n  offsetLeft: _propTypes2.default.number,\n  offsetTop: _propTypes2.default.number\n});\n\nvar defaultProps = {};\n\nfunction TooltipWithBounds(_ref) {\n  var initialLeft = _ref.left,\n      initialTop = _ref.top,\n      _ref$offsetLeft = _ref.offsetLeft,\n      offsetLeft = _ref$offsetLeft === undefined ? 10 : _ref$offsetLeft,\n      _ref$offsetTop = _ref.offsetTop,\n      offsetTop = _ref$offsetTop === undefined ? 10 : _ref$offsetTop,\n      rect = _ref.rect,\n      parentRect = _ref.parentRect,\n      getRects = _ref.getRects,\n      children = _ref.children,\n      style = _ref.style,\n      otherProps = _objectWithoutProperties(_ref, ['left', 'top', 'offsetLeft', 'offsetTop', 'rect', 'parentRect', 'getRects', 'children', 'style']);\n\n  var left = initialLeft;\n  var top = initialTop;\n\n  if (rect && parentRect) {\n    left = offsetLeft + rect.right > parentRect.right || offsetLeft + rect.right > window.innerWidth ? left - rect.width - offsetLeft : left + offsetLeft;\n    top = offsetTop + rect.bottom > parentRect.bottom || offsetTop + rect.bottom > window.innerHeight ? top - rect.height - offsetTop : top + offsetTop;\n  }\n\n  return _react2.default.createElement(_Tooltip2.default, _extends({\n    style: _extends({\n      top: 0,\n      transform: 'translate(' + left + 'px, ' + top + 'px)'\n    }, style)\n  }, otherProps), children);\n}\n\nTooltipWithBounds.propTypes = propTypes;\nTooltipWithBounds.defaultProps = defaultProps;\nexports.default = (0, _bounds.withBoundingRects)(TooltipWithBounds);","map":null,"metadata":{},"sourceType":"script"}