{"ast":null,"code":"function _extends() {\n  return _extends = Object.assign || function (a) {\n    for (var b, c = 1; c < arguments.length; c++) {\n      for (var d in b = arguments[c], b) {\n        Object.prototype.hasOwnProperty.call(b, d) && (a[d] = b[d]);\n      }\n    }\n\n    return a;\n  }, _extends.apply(this, arguments);\n}\n\nimport color from \"./color\";\nimport font from \"./font\";\nimport { tickLabels, baseLabel } from \"./svgLabel\";\nimport { unit } from \"./size\";\nexport var colors = color;\nexport var labelStyles = _extends({}, baseLabel, font.light);\nexport var gridStyles = {\n  stroke: colors.grid,\n  strokeWidth: 1\n};\nexport var xAxisStyles = {\n  stroke: colors.gridDark,\n  strokeWidth: 2,\n  label: {\n    bottom: _extends({}, baseLabel),\n    top: _extends({}, baseLabel)\n  }\n};\nexport var yAxisStyles = {\n  stroke: colors.grid,\n  strokeWidth: 1,\n  label: {\n    left: _extends({}, baseLabel),\n    right: _extends({}, baseLabel)\n  }\n};\nexport var xTickStyles = {\n  stroke: colors.grid,\n  length: +unit,\n  label: {\n    bottom: _extends({}, tickLabels.bottom),\n    top: _extends({}, tickLabels.top)\n  }\n};\nexport var yTickStyles = {\n  stroke: colors.grid,\n  length: +unit,\n  label: {\n    left: _extends({}, tickLabels.left),\n    right: _extends({}, tickLabels.right)\n  }\n};\nexport default {\n  colors: colors,\n  labelStyles: labelStyles,\n  gridStyles: gridStyles,\n  xAxisStyles: xAxisStyles,\n  xTickStyles: xTickStyles,\n  yAxisStyles: yAxisStyles,\n  yTickStyles: yTickStyles\n};","map":null,"metadata":{},"sourceType":"module"}