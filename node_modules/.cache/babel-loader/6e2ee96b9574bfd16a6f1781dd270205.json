{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AxisBottom, AxisTop } from '@vx/axis';\nimport { axisStylesShape, tickStylesShape } from '../utils/propShapes';\nvar propTypes = {\n  axisStyles: axisStylesShape,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  labelProps: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n  numTicks: PropTypes.number,\n  orientation: PropTypes.oneOf(['bottom', 'top']),\n  tickStyles: tickStylesShape,\n  tickLabelProps: PropTypes.func,\n  tickFormat: PropTypes.func,\n  tickValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  // probably injected by parent\n  top: PropTypes.number,\n  left: PropTypes.number,\n  scale: PropTypes.func\n};\nvar defaultProps = {\n  axisStyles: {},\n  label: null,\n  labelProps: null,\n  left: 0,\n  numTicks: null,\n  orientation: 'bottom',\n  scale: null,\n  tickFormat: null,\n  tickLabelProps: undefined,\n  tickStyles: {},\n  top: 0,\n  tickValues: undefined\n};\nexport default function XAxis(_ref) {\n  var axisStyles = _ref.axisStyles,\n      label = _ref.label,\n      labelProps = _ref.labelProps,\n      top = _ref.top,\n      left = _ref.left,\n      numTicks = _ref.numTicks,\n      orientation = _ref.orientation,\n      scale = _ref.scale,\n      tickFormat = _ref.tickFormat,\n      passedTickLabelProps = _ref.tickLabelProps,\n      tickStyles = _ref.tickStyles,\n      tickValues = _ref.tickValues;\n  if (!scale) return null;\n  var Axis = orientation === 'bottom' ? AxisBottom : AxisTop;\n  var tickLabelProps = passedTickLabelProps;\n\n  if (!tickLabelProps) {\n    tickLabelProps = tickStyles.label && tickStyles.label[orientation] ? function () {\n      return tickStyles.label[orientation];\n    } : undefined;\n  }\n\n  return React.createElement(Axis, {\n    top: top,\n    left: left,\n    hideTicks: false,\n    hideZero: false,\n    label: label,\n    labelProps: labelProps || (axisStyles.label || {})[orientation],\n    numTicks: numTicks,\n    scale: scale,\n    stroke: axisStyles.stroke,\n    strokeWidth: axisStyles.strokeWidth,\n    tickFormat: tickFormat,\n    tickLength: tickStyles.tickLength,\n    tickLabelProps: tickLabelProps,\n    tickStroke: tickStyles.stroke,\n    tickValues: tickValues\n  });\n}\nXAxis.propTypes = propTypes;\nXAxis.defaultProps = defaultProps;\nXAxis.displayName = 'XAxis';","map":null,"metadata":{},"sourceType":"module"}