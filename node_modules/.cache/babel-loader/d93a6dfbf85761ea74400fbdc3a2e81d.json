{"ast":null,"code":"import _toConsumableArray from\"/Users/nicholas/Desktop/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectWithoutProperties from\"/Users/nicholas/Desktop/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Histogram,BarSeries,XAxis,YAxis,withParentSize}from'@data-ui/histogram';import{chartTheme}from'@data-ui/theme';var ResponsiveHistogram=withParentSize(function(_ref){var parentWidth=_ref.parentWidth,rest=_objectWithoutProperties(_ref,[\"parentWidth\"]);return React.createElement(Histogram,Object.assign({width:parentWidth,height:parentWidth*0.5},rest));});var HistChart=function HistChart(props){var maxYValue=Math.max.apply(Math,_toConsumableArray(props.data.map(function(d){return d.count;})));return React.createElement(ResponsiveHistogram,{theme:chartTheme,ariaLabel:\"Histogram\",orientation:\"vertical\",valueAccessor:function valueAccessor(datum){return datum;},binType:\"numeric\",binCount:22,renderTooltip:function renderTooltip(_ref2){var event=_ref2.event,datum=_ref2.datum,data=_ref2.data,color=_ref2.color;return React.createElement(\"div\",null,React.createElement(\"strong\",{style:{color:chartTheme.colors.categories[3]}},datum.bin0,\" to \",datum.bin1),React.createElement(\"div\",null,React.createElement(\"strong\",null,\"count: \"),datum.count));}},React.createElement(BarSeries,{stroke:chartTheme.colors.categories[3],fillOpacity:0.15,fill:\"rgb(202, 230, 151)\",rawData:props.data}),React.createElement(XAxis,{color:\"rgb(202, 230, 151)\"}),React.createElement(YAxis,{label:\"Count\",yDomain:[0,maxYValue]}));};export default HistChart;","map":{"version":3,"sources":["/Users/nicholas/Desktop/react-client/src/components/barChart/HistChart.jsx"],"names":["React","Histogram","BarSeries","XAxis","YAxis","withParentSize","chartTheme","ResponsiveHistogram","parentWidth","rest","HistChart","props","maxYValue","Math","max","data","map","d","count","datum","event","color","colors","categories","bin0","bin1"],"mappings":"kVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,SADF,CAEEC,SAFF,CAGEC,KAHF,CAIEC,KAJF,CAKEC,cALF,KAMO,oBANP,CAOA,OAASC,UAAT,KAA2B,gBAA3B,CAEA,GAAMC,CAAAA,mBAAmB,CAAGF,cAAc,CACxC,kBAAGG,CAAAA,WAAH,MAAGA,WAAH,CAAmBC,IAAnB,sDACE,qBAAC,SAAD,gBACE,KAAK,CAAED,WADT,CAEE,MAAM,CAAEA,WAAW,CAAG,GAFxB,EAGMC,IAHN,EADF,EADwC,CAA1C,CAYA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQF,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAN,EAAhB,CAAR,EAAtB,CAEA,MACE,qBAAC,mBAAD,EACE,KAAK,CAAEZ,UADT,CAEE,SAAS,CAAC,WAFZ,CAGE,WAAW,CAAC,UAHd,CAIE,aAAa,CAAE,uBAAAa,KAAK,QAAIA,CAAAA,KAAJ,EAJtB,CAKE,OAAO,CAAC,SALV,CAME,QAAQ,CAAE,EANZ,CAOE,aAAa,CAAE,iCAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUD,KAAV,OAAUA,KAAV,CAAiBJ,IAAjB,OAAiBA,IAAjB,CAAuBM,KAAvB,OAAuBA,KAAvB,OACb,gCACE,8BAAQ,KAAK,CAAE,CAAEA,KAAK,CAAEf,UAAU,CAACgB,MAAX,CAAkBC,UAAlB,CAA6B,CAA7B,CAAT,CAAf,EACGJ,KAAK,CAACK,IADT,QACmBL,KAAK,CAACM,IADzB,CADF,CAIE,+BACE,4CADF,CAEGN,KAAK,CAACD,KAFT,CAJF,CADa,EAPjB,EAmBE,oBAAC,SAAD,EACE,MAAM,CAAEZ,UAAU,CAACgB,MAAX,CAAkBC,UAAlB,CAA6B,CAA7B,CADV,CAEE,WAAW,CAAE,IAFf,CAGE,IAAI,CAAC,oBAHP,CAIE,OAAO,CAAEZ,KAAK,CAACI,IAJjB,EAnBF,CAyBE,oBAAC,KAAD,EAAO,KAAK,CAAC,oBAAb,EAzBF,CA0BE,oBAAC,KAAD,EAAO,KAAK,CAAC,OAAb,CAAqB,OAAO,CAAE,CAAC,CAAD,CAAIH,SAAJ,CAA9B,EA1BF,CADF,CA8BD,CAjCD,CAmCA,cAAeF,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport {\n  Histogram,\n  BarSeries,\n  XAxis,\n  YAxis,\n  withParentSize\n} from '@data-ui/histogram'\nimport { chartTheme } from '@data-ui/theme'\n\nconst ResponsiveHistogram = withParentSize(\n  ({ parentWidth, ...rest }) => (\n    <Histogram\n      width={parentWidth}\n      height={parentWidth * 0.5}\n      {...rest}\n    />\n\n  )\n\n)\n\nconst HistChart = (props) => {\n  const maxYValue = Math.max(...props.data.map(d => d.count))\n\n  return (\n    <ResponsiveHistogram\n      theme={chartTheme}\n      ariaLabel='Histogram'\n      orientation='vertical'\n      valueAccessor={datum => datum}\n      binType='numeric'\n      binCount={22}\n      renderTooltip={({ event, datum, data, color }) => (\n        <div>\n          <strong style={{ color: chartTheme.colors.categories[3] }}>\n            {datum.bin0} to {datum.bin1}\n          </strong>\n          <div>\n            <strong>count: </strong>\n            {datum.count}\n          </div>\n        </div>\n      )}\n    >\n      <BarSeries\n        stroke={chartTheme.colors.categories[3]}\n        fillOpacity={0.15}\n        fill='rgb(202, 230, 151)'\n        rawData={props.data}\n      />\n      <XAxis color='rgb(202, 230, 151)' />\n      <YAxis label='Count' yDomain={[0, maxYValue]} />\n    </ResponsiveHistogram>\n  )\n}\n\nexport default HistChart\n"]},"metadata":{},"sourceType":"module"}